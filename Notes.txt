rotation issue:

the rotation box raycast check, checks the position for where the cast was hit on the child out of bounds compared to the parent transform position, however, because the checks are on if statements, the "if out of bounds child is to the right/left" is before the "bottom/above" check, therefore if an S, Z, L or J block rotates while close to the bottom bounds, and the child that triggers the out of bounds cast is still to the right or left of the center, then it will treat it as if it needs to move to the right or left because those checks are first. this will not correct the position and will end up moving the block until it is no longer touching the bottom bounds, i.e the play area (this is the reason why it looks like it teleports out of the play area bc if hanging piece is checked first, then move right/left is called until it is no longer touching the bounds).

fix:
rotation method in block movement script needs a refactor

If you move for a child block in order to get it in bounds, and after the movement, that child block is still out of bounds, move the block back and check other directions compared to block's position to see if another directional move is possible, if so, move that direction instead, if that child block is STILL out of bounds, then this probably means the rotation isnt possible. you can try checking if doing the first move as well will put the block into bounds, but this is highly unlikely, as a double move in two different directions means the child is sitting out of bounds in a corner, which would require a double move (up and left or up and right) because it is at the bottom right or bottom left corner out of bounds which theoretically should be impossible due to block origin points. probably after the move back, second direction move check, if block is still out of bounds then just stop there, and continue to alt rotation or undo rotation.